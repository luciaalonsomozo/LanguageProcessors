//Punteros

Struct tInfo {
    Int campo;
    Int *campoPuntero;
};

main() -> Int{
    
    Int var1 = 2;
    Int * var2 = new Int; 
    var2 = &var1; //asignamos a la direccion de memoria del puntero var2 la de la variable var1
    Int var3 = *var2; //var3 = 2
    show(*var2);
    Int * var4 = new Int;
    var4 = var2; //direccion de memoria del puntero var4 la de var2
    show(*var4);
    Bool varB1 = False;
    Bool * varB2 = new Bool;
    varB2 = &varB1; //asignamos a la direccion de memoria del puntero varB2 la de la variable varB1
    show(*varB2);
    Bool * varB3 = new Bool;
    varB3 = varB2; //asignamos a la direccion de memoria del puntero varB3 la de la variable varB2
    show(*varB3);
    Bool * varB4 = new Bool;
    *varB4 = not(*varB2) && not(*varB3);  //varB4 = True
    
    tInfo nombre;
    *nombre.campoPuntero = 1; //accedemos a un campo puntero de un struct
    nombre.campo = 2;

    tInfo * nombrePuntero; //puntero de un struct
    (*nombrePuntero).campo = 0;

    
    List<List<Int>[1]*>[2] array2; //punteros con listas
    List<Int>[1] * puntero = new  List<Int>[1];
    *puntero = {1};
    array2[0] = puntero;
    List<Int>[1] aux =  *array2[0];
    Int a = (*array2[0])[0];
    
    return 0;
} 